apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent" "$http_x_forwarded_for"';
        access_log /var/log/nginx/access.log main;
        sendfile on;
        keepalive_timeout 65;

        # DNS resolver configuration - force IPv4
        resolver 8.8.8.8 ipv6=off;
        resolver_timeout 5s;

        # SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Rate limiting zone - 5 requests per second per IP
        limit_req_zone $binary_remote_addr zone=blockchain_ratelimit:10m rate=5r/s;
        limit_req_status 429; # Return 429 Too Many Requests on rate limit

        # Cronos Tendermint RPC endpoint
        server {
            listen 8000;

            location / {
                limit_req zone=blockchain_ratelimit burst=10 nodelay;

                proxy_pass https://rpc.cronos.org/;
                proxy_http_version 1.1;
                proxy_set_header Host rpc.cronos.org;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                # SSL configuration for upstream
                proxy_ssl_server_name on;
                proxy_ssl_protocols TLSv1.2 TLSv1.3;
                proxy_ssl_verify off;

                # Handle errors
                proxy_intercept_errors on;
                error_page 429 = @rate_limit_exceeded;
            }

            location @rate_limit_exceeded {
                default_type application/json;
                return 429 '{"error": "Rate limit exceeded. Please try again later."}';
            }
        }

        # Cronos Cosmos RPC endpoint
        server {
            listen 8001;

            location / {
                limit_req zone=blockchain_ratelimit burst=10 nodelay;

                proxy_pass https://rest.cronos.org/;
                proxy_http_version 1.1;
                proxy_set_header Host rest.cronos.org;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                # SSL configuration for upstream
                proxy_ssl_server_name on;
                proxy_ssl_protocols TLSv1.2 TLSv1.3;
                proxy_ssl_verify off;

                # Handle errors
                proxy_intercept_errors on;
                error_page 429 = @rate_limit_exceeded;
            }

            location @rate_limit_exceeded {
                default_type application/json;
                return 429 '{"error": "Rate limit exceeded. Please try again later."}';
            }
        }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blockchain-proxy
  labels:
    app: blockchain-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: blockchain-proxy
  template:
    metadata:
      labels:
        app: blockchain-proxy
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 8000
          name: tendermint-rpc
        - containerPort: 8001
          name: cosmos-rpc
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config

---
apiVersion: v1
kind: Service
metadata:
  name: blockchain-proxy
  labels:
    app: blockchain-proxy
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: tendermint-rpc
  - port: 8001
    targetPort: 8001
    protocol: TCP
    name: cosmos-rpc
  selector:
    app: blockchain-proxy